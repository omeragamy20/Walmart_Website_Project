@using Ecommerce.DTOs.OrderDTOs
@model EntityPaginated<GetAllOrderDTOs>
@{
    ViewData["Title"] = "GetAll";
}

<h1>All Orders </h1>

<link href="~/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/assets/vendor/bootstrap/css/bootstrap.rtl.min.css" rel="stylesheet" />
<link href="~/assets/vendor/bootstrap/css/bootstrap.rtl.css" rel="stylesheet" />
<link href="~/assets/vendor/bootstrap/css/bootstrap.css" rel="stylesheet" />


<table class="table table-light table-hover">
    <thead>
        <tr class="table-info">
            <th scope="col">Order number</th>
            <th scope="col">Order-Date</th>
            <th scope="col">User Name</th>
            <th scope="col">User Email</th>
            <th scope="col">Status</th>
            <th scope="col">Accept</th>
            <th scope="col">Cancel</th>
            <th scope="col">Items</th>
            <th scope="col">Payment</th>
            <th scope="col">Shipment</th>
        </tr>
    </thead>
    <tbody>
      
        
        @foreach(var item in Model.Data)
        {

        <tr>
            <td>@item.Id</td>
            <td>@item.OrderDate</td>
                <td>@item.CustomerName</td>
                <td>@item.CustomerEmail</td>
            @if(item.Status == 0){

            <td>Pendding..</td>
                    <td><a class="btn btn-outline-info" href="/Approve/@item.Id" role="button">Approve</a></td>
                    <td> <a class="btn  btn-outline-danger" href="/Cancel/@item.Id" role="button">Cancelled</a></td>
                }else if (item.Status == 1){
            <td>Approve</td>
                    <td><button type="button" class="btn btn-outline-primary" disabled>Disable</button></td>
                    <td> <a class="btn btn-danger" href="/Cancel/@item.Id" role="button">Cancelled</a></td>
            }else {
            <td>Cancelled</td>

                    <td><button type="button" class="btn btn-outline-primary" disabled>Disable</button></td>
                    <td><button type="button" class="btn btn-outline-danger" disabled>Disable</button></td>
            }

                <td><a class="btn btn-outline-info" href="/OrderItems/GetAllItems/@item.Id" role="button">View</a></td>
                
            <td> <a class="btn btn-outline-primary" asp-route-id="@item.PaymentId" asp-action="Index" asp-controller="Payment">Payment</a></td>
                      
                     
                <td> <a class="btn btn-outline-danger" asp-route-id="@item.ShipmentId" asp-action="Index" asp-controller="Shipment">Shipment</a></td>       
            </tr>
        }
     
    </tbody>
</table>

<div class="pagination d-flex justify-content-center">
   @if (Model.CurrentPage > 1)
    {
        <a href="@Url.Action("GetAll", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" class="btn btn-outline-secondary">Previous</a>
    }

    @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
    {
        <a href="@Url.Action("GetAll", new { pageNumber = pageNumber, pageSize = Model.PageSize })"
           class="btn @(Model.CurrentPage == pageNumber ? "btn-primary" : "btn-outline-secondary")">
            @pageNumber
        </a>
    }

   @if (Model.CurrentPage < Model.TotalPages)
    {
        <a href="@Url.Action("GetAll", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" class="btn btn-outline-secondary">Next</a>
    }
</div>