@model EntityPaginated<GetAllproductDTO>
@* @model List<GetAllproductDTO> *@
<style>
    th,td{
        font-size:14px;
    }

    tr {
        font-size: 16px;
    }
</style>

<a class="btn btn-outline-primary" asp-action="Create">Create One</a>
<br>
@* @if (Model == null || !Model.Any()) *@
@if (Model.Data == null || !Model.Data.Any())
{
    <div class="alert alert-warning" role="alert">
        No products found.
    </div>
}
else
{
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"];
        </div>
    }
    <div class="search-bar d-flex justify-content-end">
    <form class="search-form d-flex align-items-right" method="POST" asp-controller="Product" asp-action="SearchProduct">
        <input type="text" name="ProductName" placeholder="Search" title="Enter search keyword">
        <button type="submit" title="Search"><i class="bi bi-search"></i></button>
    </form>
</div> <br><br />
<!-- End Search Bar -->


    <br>
    <br />
<table class="table table-striped table-hover table-bordered align-middle table-xl">
    <thead>
        <tr>
            <th scope="col">Title_en</th>
            <th scope="col">Title_ar</th>
            @* <th scope="col">Description_en</th>
            <th scope="col">Description_ar</th> *@
            <th scope="col">Price</th>
            <th scope="col">Stock</th>
            <th scope="col">SubCategory_En</th>
            <th scope="col">SubCategory_Ar</th>
            <th scope="col">Facilities_En</th>
            <th scope="col">Facilities_Ar</th>
          
            <th scope="col">Image</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var p in Model.Data){
        <tr>
            <td>@p.Title_en</td>
            <td>@p.Title_ar</td>
         @*    <td>@p.Description_en</td>
            <td>@p.Description_ar</td> *@
            <td>@p.Price</td>
            <td>@p.Stock</td>
            <td>
                @foreach(var s in @p.SubCategoryNames)
                {
                        <li style="list-style-type:none">
                            @s
                        </li>
                }
            </td>
            <td>
                    @foreach (var s in @p.SubCategoryNamesAr)
                    {
                        <li style="list-style-type:none">
                            @s
                        </li>
                    }
            </td>
            <td>@foreach (var f in @p.Facilities)
                    {
                        <li style="list-style-type:none">
                            @f
                        </li>
                    }
            </td>

            <td>@foreach (var f in @p.Facilities_Ar)
                    {
                        <li style="list-style-type:none">
                            @f
                        </li>
                    }
            </td>
            <td>
               
                    <img src="@p.ImageUrls[0]" width="50px" height="50px" />
              
            </td>
           <td>
                <div style="display:flex">
                        <a class="btn btn-outline-primary" asp-route-id="@p.Id" asp-action="Update">Update</a>
                        &nbsp;&nbsp;
                        <a class="btn btn-outline-danger" asp-route-id="@p.Id" asp-action="Delete">Delete</a>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>
    <div class="pagination d-flex justify-content-center">
        <!-- Previous button "GetAll" -->
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("GetALlProduct", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" class="btn btn-outline-secondary">Previous</a>
        }

        <!-- Page number buttons -->
        @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
        {
            <a href="@Url.Action("GetALlProduct", new { pageNumber = pageNumber, pageSize = Model.PageSize })"
               class="btn @(Model.CurrentPage == pageNumber ? "btn-primary" : "btn-outline-secondary")">
                @pageNumber
            </a>
        }

        <!-- Next button -->
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("GetALlProduct", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" class="btn btn-outline-secondary">Next</a>
        }
    </div>
}